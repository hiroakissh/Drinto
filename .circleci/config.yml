# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  display_system_info:
      macos:
          xcode: 14.1.0 # Specify the Xcode version to use
      steps:
        - run:
            name: Display system infomation
            command: system_profiler SPHardwareDataType
  
  test:
    macos:
      xcode: 14.1.0
    steps:
      - checkout
      - run: 
         name: Run Unit Tests
         command: xcodebuild test -scheme DrintoTests

  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    macos:
      xcode: 14.1.0 # Specify the Xcode version to use

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Build Application
          command: xcodebuild


      # Collect XML test results data to show in the UI, and save the same XML
      # files under test-results folder in the Artifacts tab
      - store_test_results:
          path: test_output
      - store_artifacts:
          path: test_output
          destination: scan-output

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test_build:
    jobs:
      - display_system_info
      - test:
          requires:
            - display_system_info
      - build:
          requires:
            - test
